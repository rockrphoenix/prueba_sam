name: Deploy Serverless Application

on:
  push:
    branches: [main, master ,develop, 'release/*']
  pull_request:
    branches: [main, master ,develop]

permissions:
  id-token: write  # Necesario para OIDC
  contents: read   # Necesario para checkout

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest
    # Determinar entorno basado en la rama
    environment: ${{ github.ref == 'refs/heads/main' && 'prod' || github.ref == 'refs/heads/develop' && 'dev' || startsWith(github.ref, 'refs/heads/release/') && 'stage' || 'test' }}

    steps:
      - name: Debug Environment Variables
        run: |
          echo "GitHub Variables:"
          echo "AWS_ROLE_ARN: ${{ vars.AWS_ROLE_ARN }}"
          echo "AWS_REGION: ${{ vars.AWS_REGION }}"
          echo "STACK_NAME: ${{ vars.STACK_NAME }}"
          echo "ENVIRONMENT: ${{ vars.ENVIRONMENT }}"
          echo "DATABASE_NAME: ${{ vars.DATABASE_NAME }}"

          echo "GitHub Context Information:"
          echo "Repository: ${{ github.repository }}"
          echo "Branch: ${{ github.ref }}"
          echo "Workflow: ${{ github.workflow }}"
          echo "Run ID: ${{ github.run_id }}"  

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-mock boto3
          pip install -r hello_world/requirements.txt

      - name: Run tests
        run: |
          python -m pytest tests/unit/

      - name: Install AWS SAM CLI
        if: github.event_name == 'push'
        run: |
          pip install aws-sam-cli

      - name: Configure AWS credentials with OIDC
        if: github.event_name == 'push'
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ vars.AWS_ROLE_ARN }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Build with SAM
        if: github.event_name == 'push'
        run: |
          sam build

      - name: Deploy with SAM
        if: github.event_name == 'push'
        run: |
          sam deploy --no-confirm-changeset --no-fail-on-empty-changeset \
          --stack-name ${{ vars.STACK_NAME }}-${{ vars.ENVIRONMENT }} \
          --resolve-s3 \
          --capabilities CAPABILITY_IAM \
          --parameter-overrides \
            Environment=${{ vars.ENVIRONMENT }} \
            MongoDbUri=${{ secrets.MONGODB_URI }} \
            DatabaseName=${{ vars.DATABASE_NAME }} \
            CollectionName=${{ vars.COLLECTION_NAME }} \
            ApiGatewayType=${{ vars.API_GATEWAY_TYPE }} \
            ExistingApiId=${{ vars.EXISTING_API_ID }} \
            ExistingApiStageName=${{ vars.EXISTING_API_STAGE_NAME }} \
            ExistingVpcId=${{ vars.EXISTING_VPC_ID }} \
            ExistingSubnetIds=${{ vars.EXISTING_SUBNET_IDS }} \
            ExistingSecurityGroupId=${{ vars.EXISTING_SECURITY_GROUP_ID }} \
            ExistingLayerArn=${{ vars.EXISTING_LAYER_ARN }}